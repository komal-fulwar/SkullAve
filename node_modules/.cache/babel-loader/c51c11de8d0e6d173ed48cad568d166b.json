{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar _a;\n\nimport semver from \"semver\";\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\n\nexport var IIGenericHID = 0x01;\nexport var IIKeyboardHID = 0x02;\nexport var IIU2F = 0x04;\nexport var IICCID = 0x08;\nexport var IIWebUSB = 0x10;\nexport var DeviceModelId;\n\n(function (DeviceModelId) {\n  DeviceModelId[\"blue\"] = \"blue\";\n  DeviceModelId[\"nanoS\"] = \"nanoS\";\n  DeviceModelId[\"nanoSP\"] = \"nanoSP\";\n  DeviceModelId[\"nanoX\"] = \"nanoX\";\n})(DeviceModelId || (DeviceModelId = {}));\n\nvar devices = (_a = {}, _a[DeviceModelId.blue] = {\n  id: DeviceModelId.blue,\n  productName: \"Ledger Blue\",\n  productIdMM: 0x00,\n  legacyUsbProductId: 0x0000,\n  usbOnly: true,\n  memorySize: 480 * 1024,\n  masks: [0x31000000, 0x31010000],\n  getBlockSize: function (_firwareVersion) {\n    return 4 * 1024;\n  }\n}, _a[DeviceModelId.nanoS] = {\n  id: DeviceModelId.nanoS,\n  productName: \"Ledger Nano S\",\n  productIdMM: 0x10,\n  legacyUsbProductId: 0x0001,\n  usbOnly: true,\n  memorySize: 320 * 1024,\n  masks: [0x31100000],\n  getBlockSize: function (firmwareVersion) {\n    var _a;\n\n    return semver.lt((_a = semver.coerce(firmwareVersion)) !== null && _a !== void 0 ? _a : \"\", \"2.0.0\") ? 4 * 1024 : 2 * 1024;\n  }\n}, _a[DeviceModelId.nanoSP] = {\n  id: DeviceModelId.nanoSP,\n  productName: \"Ledger Nano S Plus\",\n  productIdMM: 0x50,\n  legacyUsbProductId: 0x0005,\n  usbOnly: true,\n  memorySize: 1533 * 1024,\n  masks: [0x33100000],\n  getBlockSize: function (_firmwareVersion) {\n    return 32;\n  }\n}, _a[DeviceModelId.nanoX] = {\n  id: DeviceModelId.nanoX,\n  productName: \"Ledger Nano X\",\n  productIdMM: 0x40,\n  legacyUsbProductId: 0x0004,\n  usbOnly: false,\n  memorySize: 2 * 1024 * 1024,\n  masks: [0x33000000],\n  getBlockSize: function (_firwareVersion) {\n    return 4 * 1024;\n  },\n  bluetoothSpec: [{\n    // this is the legacy one (prototype version). we will eventually drop it.\n    serviceUuid: \"d973f2e0-b19e-11e2-9e96-0800200c9a66\",\n    notifyUuid: \"d973f2e1-b19e-11e2-9e96-0800200c9a66\",\n    writeUuid: \"d973f2e2-b19e-11e2-9e96-0800200c9a66\",\n    writeCmdUuid: \"d973f2e3-b19e-11e2-9e96-0800200c9a66\"\n  }, {\n    serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n    notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n    writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n    writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\"\n  }]\n}, _a);\nvar productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano X\": DeviceModelId.nanoX\n};\nvar devicesList = Object.values(devices);\n/**\n *\n */\n\nexport var ledgerUSBVendorId = 0x2c97;\n/**\n *\n */\n\nexport var getDeviceModel = function (id) {\n  var info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\n\nexport var identifyTargetId = function (targetId) {\n  var deviceModel = devicesList.find(function (_a) {\n    var masks = _a.masks;\n    return masks.find(function (mask) {\n      return (targetId & 0xffff0000) === mask;\n    });\n  });\n  return deviceModel;\n};\n/**\n *\n */\n\nexport var identifyUSBProductId = function (usbProductId) {\n  var legacy = devicesList.find(function (d) {\n    return d.legacyUsbProductId === usbProductId;\n  });\n  if (legacy) return legacy;\n  var mm = usbProductId >> 8;\n  var deviceModel = devicesList.find(function (d) {\n    return d.productIdMM === mm;\n  });\n  return deviceModel;\n};\nexport var identifyProductName = function (productName) {\n  var productId = productMap[productName];\n\n  if (!productId && productName.startsWith(\"Nano S\")) {\n    productId = DeviceModelId.nanoSP;\n  }\n\n  var deviceModel = devicesList.find(function (d) {\n    return d.id === productId;\n  });\n  return deviceModel;\n};\nvar bluetoothServices = [];\nvar serviceUuidToInfos = {};\n\nfor (var id in devices) {\n  var deviceModel = devices[id];\n  var bluetoothSpec = deviceModel.bluetoothSpec;\n\n  if (bluetoothSpec) {\n    for (var i = 0; i < bluetoothSpec.length; i++) {\n      var spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[spec.serviceUuid.replace(/-/g, \"\")] = __assign({\n        deviceModel: deviceModel\n      }, spec);\n    }\n  }\n}\n/**\n *\n */\n\n\nexport var getBluetoothServiceUuids = function () {\n  return bluetoothServices;\n};\n/**\n *\n */\n\nexport var getInfosForServiceUuid = function (uuid) {\n  return serviceUuidToInfos[uuid.toLowerCase()];\n};","map":{"version":3,"mappings":"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","names":["semver","IIGenericHID","IIKeyboardHID","IIU2F","IICCID","IIWebUSB","DeviceModelId","devices","_a","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","lt","coerce","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","productMap","Blue","devicesList","Object","values","ledgerUSBVendorId","getDeviceModel","info","Error","identifyTargetId","targetId","deviceModel","find","mask","identifyUSBProductId","usbProductId","legacy","d","mm","identifyProductName","productId","startsWith","bluetoothServices","serviceUuidToInfos","i","length","spec","push","replace","__assign","getBluetoothServiceUuids","getInfosForServiceUuid","uuid","toLowerCase"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}