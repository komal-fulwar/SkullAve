{"ast":null,"code":"var _jsxFileName = \"/Users/komalfulwar/Downloads/candy-machine-ui/src/MintButton.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress } from '@material-ui/core';\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CTAButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your own styles here\n\n_c = CTAButton;\nexport const MintButton = _ref => {\n  _s();\n\n  let {\n    onMint,\n    candyMachine,\n    isMinting,\n    isActive\n  } = _ref;\n  const {\n    requestGatewayToken,\n    gatewayStatus\n  } = useGateway();\n  const [clicked, setClicked] = useState(false);\n  useEffect(() => {\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\n      onMint();\n      setClicked(false);\n    }\n  }, [gatewayStatus, clicked, setClicked, onMint]);\n\n  const getMintButtonContent = () => {\n    if (candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isSoldOut) {\n      return 'SOLD OUT';\n    } else if (isMinting) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    } else if (candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isPresale || candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isWhitelistOnly) {\n      return 'WHITELIST MINT';\n    } else if (clicked && candyMachine !== null && candyMachine !== void 0 && candyMachine.state.gatekeeper) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this);\n    }\n\n    return 'MINT';\n  };\n\n  return /*#__PURE__*/_jsxDEV(CTAButton, {\n    disabled: clicked || isMinting || !isActive,\n    onClick: async () => {\n      setClicked(true);\n\n      if (candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isActive && candyMachine !== null && candyMachine !== void 0 && candyMachine.state.gatekeeper) {\n        if (gatewayStatus === GatewayStatus.ACTIVE) {\n          setClicked(true);\n        } else {\n          await requestGatewayToken();\n        }\n      } else {\n        await onMint();\n        setClicked(false);\n      }\n    },\n    variant: \"contained\",\n    children: getMintButtonContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MintButton, \"C4iCClLy0038vDkrez1VZOKsNPU=\", false, function () {\n  return [useGateway];\n});\n\n_c2 = MintButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CTAButton\");\n$RefreshReg$(_c2, \"MintButton\");","map":{"version":3,"sources":["/Users/komalfulwar/Downloads/candy-machine-ui/src/MintButton.tsx"],"names":["styled","Button","CircularProgress","GatewayStatus","useGateway","useEffect","useState","CTAButton","MintButton","onMint","candyMachine","isMinting","isActive","requestGatewayToken","gatewayStatus","clicked","setClicked","ACTIVE","getMintButtonContent","state","isSoldOut","isPresale","isWhitelistOnly","gatekeeper"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,6BAA1C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,OAAO,MAAMC,SAAS,GAAGP,MAAM,CAACC,MAAD,CAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO,C,CASJ;;KATUM,S;AAWb,OAAO,MAAMC,UAAU,GAAG,QAUpB;AAAA;;AAAA,MAVqB;AACzBC,IAAAA,MADyB;AAEzBC,IAAAA,YAFyB;AAGzBC,IAAAA,SAHyB;AAIzBC,IAAAA;AAJyB,GAUrB;AACJ,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAAyCV,UAAU,EAAzD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,aAAa,KAAKX,aAAa,CAACc,MAAhC,IAA0CF,OAA9C,EAAuD;AACrDN,MAAAA,MAAM;AACNO,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GALQ,EAKN,CAACF,aAAD,EAAgBC,OAAhB,EAAyBC,UAAzB,EAAqCP,MAArC,CALM,CAAT;;AAOA,QAAMS,oBAAoB,GAAG,MAAM;AACjC,QAAIR,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAES,KAAd,CAAoBC,SAAxB,EAAmC;AACjC,aAAO,UAAP;AACD,KAFD,MAEO,IAAIT,SAAJ,EAAe;AACpB,0BAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA,IACLD,YAAY,SAAZ,IAAAA,YAAY,WAAZ,IAAAA,YAAY,CAAES,KAAd,CAAoBE,SAApB,IACAX,YADA,aACAA,YADA,eACAA,YAAY,CAAES,KAAd,CAAoBG,eAFf,EAGL;AACA,aAAO,gBAAP;AACD,KALM,MAKA,IAAIP,OAAO,IAAIL,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAES,KAAd,CAAoBI,UAAnC,EAA+C;AACpD,0BAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAO,MAAP;AACD,GAfD;;AAiBA,sBACE,QAAC,SAAD;AACE,IAAA,QAAQ,EAAER,OAAO,IAAIJ,SAAX,IAAwB,CAACC,QADrC;AAEE,IAAA,OAAO,EAAE,YAAY;AACnBI,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAIN,YAAY,SAAZ,IAAAA,YAAY,WAAZ,IAAAA,YAAY,CAAES,KAAd,CAAoBP,QAApB,IAAgCF,YAAhC,aAAgCA,YAAhC,eAAgCA,YAAY,CAAES,KAAd,CAAoBI,UAAxD,EAAoE;AAClE,YAAIT,aAAa,KAAKX,aAAa,CAACc,MAApC,EAA4C;AAC1CD,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD,SAFD,MAEO;AACL,gBAAMH,mBAAmB,EAAzB;AACD;AACF,OAND,MAMO;AACL,cAAMJ,MAAM,EAAZ;AACAO,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAdH;AAeE,IAAA,OAAO,EAAC,WAfV;AAAA,cAiBGE,oBAAoB;AAjBvB;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3DM;;GAAMV,U;UAWoCJ,U;;;MAXpCI,U","sourcesContent":["import styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { CandyMachineAccount } from './candy-machine';\nimport { CircularProgress } from '@material-ui/core';\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\nimport { useEffect, useState } from 'react';\n\nexport const CTAButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your own styles here\n\nexport const MintButton = ({\n  onMint,\n  candyMachine,\n  isMinting,\n  isActive,\n}: {\n  onMint: () => Promise<void>;\n  candyMachine?: CandyMachineAccount;\n  isMinting: boolean;\n  isActive: boolean;\n}) => {\n  const { requestGatewayToken, gatewayStatus } = useGateway();\n  const [clicked, setClicked] = useState(false);\n\n  useEffect(() => {\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\n      onMint();\n      setClicked(false);\n    }\n  }, [gatewayStatus, clicked, setClicked, onMint]);\n\n  const getMintButtonContent = () => {\n    if (candyMachine?.state.isSoldOut) {\n      return 'SOLD OUT';\n    } else if (isMinting) {\n      return <CircularProgress />;\n    } else if (\n      candyMachine?.state.isPresale ||\n      candyMachine?.state.isWhitelistOnly\n    ) {\n      return 'WHITELIST MINT';\n    } else if (clicked && candyMachine?.state.gatekeeper) {\n      return <CircularProgress />;\n    }\n\n    return 'MINT';\n  };\n\n  return (\n    <CTAButton\n      disabled={clicked || isMinting || !isActive}\n      onClick={async () => {\n        setClicked(true);\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\n          if (gatewayStatus === GatewayStatus.ACTIVE) {\n            setClicked(true);\n          } else {\n            await requestGatewayToken();\n          }\n        } else {\n          await onMint();\n          setClicked(false);\n        }\n      }}\n      variant=\"contained\"\n    >\n      {getMintButtonContent()}\n    </CTAButton>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}