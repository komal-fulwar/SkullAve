{"ast":null,"code":"import camelCase from \"camelcase\";\nimport StateFactory from \"./state\";\nimport InstructionFactory from \"./instruction\";\nimport TransactionFactory from \"./transaction\";\nimport RpcFactory from \"./rpc\";\nimport AccountFactory from \"./account\";\nimport SimulateFactory from \"./simulate\";\nimport { parseIdlErrors } from \"../common\"; // Re-exports.\n\nexport { StateClient } from \"./state\";\nexport { AccountClient } from \"./account\";\nexport default class NamespaceFactory {\n  /**\n   * Generates all namespaces for a given program.\n   */\n  static build(idl, coder, programId, provider) {\n    const rpc = {};\n    const instruction = {};\n    const transaction = {};\n    const simulate = {};\n    const idlErrors = parseIdlErrors(idl);\n    const state = StateFactory.build(idl, coder, programId, provider);\n    idl.instructions.forEach(idlIx => {\n      const ixItem = InstructionFactory.build(idlIx, (ixName, ix) => coder.instruction.encode(ixName, ix), programId);\n      const txItem = TransactionFactory.build(idlIx, ixItem);\n      const rpcItem = RpcFactory.build(idlIx, txItem, idlErrors, provider);\n      const simulateItem = SimulateFactory.build(idlIx, txItem, idlErrors, provider, coder, programId, idl);\n      const name = camelCase(idlIx.name);\n      instruction[name] = ixItem;\n      transaction[name] = txItem;\n      rpc[name] = rpcItem;\n      simulate[name] = simulateItem;\n    });\n    const account = idl.accounts ? AccountFactory.build(idl, coder, programId, provider) : {};\n    return [rpc, instruction, transaction, account, simulate, state];\n  }\n\n}","map":{"version":3,"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAKA,OAAOC,YAAP,MAA0C,SAA1C;AACA,OAAOC,kBAAP,MAAyD,eAAzD;AACA,OAAOC,kBAAP,MAAyD,eAAzD;AACA,OAAOC,UAAP,MAAyC,OAAzC;AACA,OAAOC,cAAP,MAAiD,WAAjD;AACA,OAAOC,eAAP,MAAmD,YAAnD;AACA,SAASC,cAAT,QAA+B,WAA/B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,SAA5B;AAIA,SAA2BC,aAA3B,QAAgE,WAAhE;AAGA,eAAc,MAAOC,gBAAP,CAAuB;AACnC;;;AAGmB,SAALC,KAAK,CACjBC,GADiB,EAEjBC,KAFiB,EAGjBC,SAHiB,EAIjBC,QAJiB,EAIC;AASlB,UAAMC,GAAG,GAAiB,EAA1B;AACA,UAAMC,WAAW,GAAyB,EAA1C;AACA,UAAMC,WAAW,GAAyB,EAA1C;AACA,UAAMC,QAAQ,GAAsB,EAApC;AAEA,UAAMC,SAAS,GAAGb,cAAc,CAACK,GAAD,CAAhC;AAEA,UAAMS,KAAK,GAAGpB,YAAY,CAACU,KAAb,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0CC,QAA1C,CAAd;AAEAH,OAAG,CAACU,YAAJ,CAAiBC,OAAjB,CAA0BC,KAAD,IAAU;AACjC,YAAMC,MAAM,GAAGvB,kBAAkB,CAACS,KAAnB,CACba,KADa,EAEb,CAACE,MAAD,EAAiBC,EAAjB,KAA6Bd,KAAK,CAACI,WAAN,CAAkBW,MAAlB,CAAyBF,MAAzB,EAAiCC,EAAjC,CAFhB,EAGbb,SAHa,CAAf;AAKA,YAAMe,MAAM,GAAG1B,kBAAkB,CAACQ,KAAnB,CAAyBa,KAAzB,EAAgCC,MAAhC,CAAf;AACA,YAAMK,OAAO,GAAG1B,UAAU,CAACO,KAAX,CAAiBa,KAAjB,EAAwBK,MAAxB,EAAgCT,SAAhC,EAA2CL,QAA3C,CAAhB;AACA,YAAMgB,YAAY,GAAGzB,eAAe,CAACK,KAAhB,CACnBa,KADmB,EAEnBK,MAFmB,EAGnBT,SAHmB,EAInBL,QAJmB,EAKnBF,KALmB,EAMnBC,SANmB,EAOnBF,GAPmB,CAArB;AAUA,YAAMoB,IAAI,GAAGhC,SAAS,CAACwB,KAAK,CAACQ,IAAP,CAAtB;AAEAf,iBAAW,CAACe,IAAD,CAAX,GAAoBP,MAApB;AACAP,iBAAW,CAACc,IAAD,CAAX,GAAoBH,MAApB;AACAb,SAAG,CAACgB,IAAD,CAAH,GAAYF,OAAZ;AACAX,cAAQ,CAACa,IAAD,CAAR,GAAiBD,YAAjB;AACD,KAxBD;AA0BA,UAAME,OAAO,GAAGrB,GAAG,CAACsB,QAAJ,GACZ7B,cAAc,CAACM,KAAf,CAAqBC,GAArB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,QAA5C,CADY,GAEZ,EAFJ;AAIA,WAAO,CAACC,GAAD,EAAMC,WAAN,EAAmBC,WAAnB,EAAgCe,OAAhC,EAAyCd,QAAzC,EAAmDE,KAAnD,CAAP;AACD;;AAzDkC","names":["camelCase","StateFactory","InstructionFactory","TransactionFactory","RpcFactory","AccountFactory","SimulateFactory","parseIdlErrors","StateClient","AccountClient","NamespaceFactory","build","idl","coder","programId","provider","rpc","instruction","transaction","simulate","idlErrors","state","instructions","forEach","idlIx","ixItem","ixName","ix","encode","txItem","rpcItem","simulateItem","name","account","accounts"],"sourceRoot":"","sources":["../../../../src/program/namespace/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}