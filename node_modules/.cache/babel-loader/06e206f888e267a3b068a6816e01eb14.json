{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"https://fast-stream-37451.herokuapp.com\";\nexport const getAllNft = page => {\n  return new Promise(async (resolve, reject) => {\n    console.log(page, 'page number');\n\n    try {\n      const res = await axios.get(`${baseUrl}/metadatas?page_no=${page}`);\n      resolve(res.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\nexport const getNftDetails = id => {\n  return new Promise(async (resolve, reject) => {\n    console.log(id, 'id number');\n\n    try {\n      const res = await axios.get(`${baseUrl}/metadata?edition_no=${id}`);\n      resolve(res.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\nexport const filterByRank = (page, sort) => {\n  return new Promise(async (resolve, reject) => {\n    console.log(page, 'id number');\n\n    try {\n      const res = await axios.get(`${baseUrl}/filter_by_rank?rank_filter=${sort}&page_no=${page}`);\n      resolve(res.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\nexport const filterByRarity = (page, sort) => {\n  return new Promise(async (resolve, reject) => {\n    console.log(page, 'id number');\n\n    try {\n      const res = await axios.get(`${baseUrl}/filter_by_rarity?rarity_filter=${sort}&page_no=${page}`);\n      resolve(res.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};","map":{"version":3,"sources":["/Users/komalfulwar/Downloads/candy-machine-ui/src/service/api.ts"],"names":["axios","baseUrl","getAllNft","page","Promise","resolve","reject","console","log","res","get","data","err","getNftDetails","id","filterByRank","sort","filterByRarity"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,yCAAhB;AAEA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAA6B;AAClD,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,aAAlB;;AACA,QAAI;AACF,YAAMM,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,OAAQ,sBAAqBE,IAAK,EAA/C,CAAlB;AACAE,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAL,CAAP;AACD,KAHD,CAIA,OAAOC,GAAP,EAAY;AACVN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACD;AACF,GATM,CAAP;AAUD,CAXI;AAaL,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAA2B;AACtD,SAAO,IAAIV,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYM,EAAZ,EAAgB,WAAhB;;AACA,QAAI;AACF,YAAML,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,OAAQ,wBAAuBa,EAAG,EAA/C,CAAlB;AACAT,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAL,CAAP;AACD,KAHD,CAIA,OAAOC,GAAP,EAAY;AACVN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACD;AACF,GATM,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMG,YAAY,GAAG,CAACZ,IAAD,EAAWa,IAAX,KAAyC;AACnE,SAAO,IAAIZ,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,WAAlB;;AACA,QAAI;AACF,YAAMM,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,OAAQ,+BAA8Be,IAAK,YAAWb,IAAK,EAAxE,CAAlB;AACAE,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAL,CAAP;AACD,KAHD,CAIA,OAAOC,GAAP,EAAY;AACVN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACD;AACF,GATM,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMK,cAAc,GAAG,CAACd,IAAD,EAAWa,IAAX,KAAyC;AACrE,SAAO,IAAIZ,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,WAAlB;;AACA,QAAI;AACF,YAAMM,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,OAAQ,mCAAkCe,IAAK,YAAWb,IAAK,EAA5E,CAAlB;AACAE,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAL,CAAP;AACD,KAHD,CAIA,OAAOC,GAAP,EAAY;AACVN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACD;AACF,GATM,CAAP;AAUD,CAXM","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"https://fast-stream-37451.herokuapp.com\"\n\nexport const getAllNft = (page: any): Promise<any> => {\n    return new Promise(async (resolve, reject) => {\n      console.log(page, 'page number')\n      try {\n        const res = await axios.get(`${baseUrl}/metadatas?page_no=${page}`);\n        resolve(res.data);\n      }\n      catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  export const getNftDetails = (id: any): Promise<any> => {\n    return new Promise(async (resolve, reject) => {\n      console.log(id, 'id number')\n      try {\n        const res = await axios.get(`${baseUrl}/metadata?edition_no=${id}`);\n        resolve(res.data);\n      }\n      catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  export const filterByRank = (page: any,sort:string): Promise<any> => {\n    return new Promise(async (resolve, reject) => {\n      console.log(page, 'id number')\n      try {\n        const res = await axios.get(`${baseUrl}/filter_by_rank?rank_filter=${sort}&page_no=${page}`);\n        resolve(res.data);\n      }\n      catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  export const filterByRarity = (page: any,sort:string): Promise<any> => {\n    return new Promise(async (resolve, reject) => {\n      console.log(page, 'id number')\n      try {\n        const res = await axios.get(`${baseUrl}/filter_by_rarity?rarity_filter=${sort}&page_no=${page}`);\n        resolve(res.data);\n      }\n      catch (err) {\n        reject(err);\n      }\n    });\n  }"]},"metadata":{},"sourceType":"module"}