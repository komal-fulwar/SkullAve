{"ast":null,"code":"var _jsxFileName = \"/Users/komalfulwar/Documents/GitHub/SkullAve/src/App.tsx\";\nimport \"./App.css\";\nimport * as anchor from \"@project-serum/anchor\";\nimport Home from \"./Home\";\nimport { Route, Routes } from \"react-router-dom\"; // import { clusterApiUrl } from \"@solana/web3.js\";\n\nimport { createTheme } from \"@material-ui/core\";\nimport NFTDetails from \"./pages/NFTDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nconst getCandyMachineId = () => {\n  try {\n    const candyMachineId = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);\n    return candyMachineId;\n  } catch (e) {\n    console.log(\"Failed to construct CandyMachineId\", e);\n    return undefined;\n  }\n};\n\nconst candyMachineId = getCandyMachineId();\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST;\nconst connection = new anchor.web3.Connection(rpcHost ? rpcHost : anchor.web3.clusterApiUrl(\"devnet\"));\nconst txTimeoutInMilliseconds = 30000;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Home, {\n        candyMachineId: candyMachineId,\n        connection: connection,\n        txTimeout: txTimeoutInMilliseconds,\n        rpcHost: rpcHost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/nft/:nftId\",\n      element: /*#__PURE__*/_jsxDEV(NFTDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/komalfulwar/Documents/GitHub/SkullAve/src/App.tsx"],"names":["anchor","Home","Route","Routes","createTheme","NFTDetails","theme","palette","type","getCandyMachineId","candyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","e","console","log","undefined","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","clusterApiUrl","txTimeoutInMilliseconds","App"],"mappings":";AAAA,OAAO,WAAP;AAGA,OAAO,KAAKA,MAAZ,MAAwB,uBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;;AAgBA,SAAwBC,WAAxB,QAA2C,mBAA3C;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACxBG,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC;AADe,CAAD,CAAzB;;AAMA,MAAMC,iBAAiB,GAAG,MAAyC;AACjE,MAAI;AACF,UAAMC,cAAc,GAAG,IAAIV,MAAM,CAACW,IAAP,CAAYC,SAAhB,CACrBC,OAAO,CAACC,GAAR,CAAYC,0BADS,CAAvB;AAIA,WAAOL,cAAP;AACD,GAND,CAME,OAAOM,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,CAAlD;AACA,WAAOG,SAAP;AACD;AACF,CAXD;;AAaA,MAAMT,cAAc,GAAGD,iBAAiB,EAAxC;AACA,MAAMW,OAAO,GAAGP,OAAO,CAACC,GAAR,CAAYO,wBAA5B;AACA,MAAMC,OAAO,GAAGT,OAAO,CAACC,GAAR,CAAYS,yBAA5B;AACA,MAAMC,UAAU,GAAG,IAAIxB,MAAM,CAACW,IAAP,CAAYc,UAAhB,CACjBH,OAAO,GAAGA,OAAH,GAAatB,MAAM,CAACW,IAAP,CAAYe,aAAZ,CAA0B,QAA1B,CADH,CAAnB;AAIA,MAAMC,uBAAuB,GAAG,KAAhC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,OAAO,eACL,QAAC,IAAD;AACE,QAAA,cAAc,EAAElB,cADlB;AAEE,QAAA,UAAU,EAAEc,UAFd;AAGE,QAAA,SAAS,EAAEG,uBAHb;AAIE,QAAA,OAAO,EAAEL;AAJX;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;KAAMM,G;AAmBN,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useMemo } from \"react\";\nimport $ from \"jquery\";\nimport * as anchor from \"@project-serum/anchor\";\nimport Home from \"./Home\";\nimport { Route, Routes } from \"react-router-dom\";\n// import { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\n\nimport { ThemeProvider, createTheme } from \"@material-ui/core\";\nimport NFTDetails from \"./pages/NFTDetails\";\n\nconst theme = createTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\n  try {\n    const candyMachineId = new anchor.web3.PublicKey(\n      process.env.REACT_APP_CANDY_MACHINE_ID!\n    );\n\n    return candyMachineId;\n  } catch (e) {\n    console.log(\"Failed to construct CandyMachineId\", e);\n    return undefined;\n  }\n};\n\nconst candyMachineId = getCandyMachineId();\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(\n  rpcHost ? rpcHost : anchor.web3.clusterApiUrl(\"devnet\")\n);\n\nconst txTimeoutInMilliseconds = 30000;\n\nconst App = () => {\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <Home\n            candyMachineId={candyMachineId}\n            connection={connection}\n            txTimeout={txTimeoutInMilliseconds}\n            rpcHost={rpcHost}\n          />\n        }\n      />\n      <Route path=\"/nft/:nftId\" element={<NFTDetails />} />\n    </Routes>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}