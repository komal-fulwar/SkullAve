{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport EventEmitter from \"events\";\nimport { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError } from \"@ledgerhq/errors\";\nexport { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\n\nvar Transport =\n/** @class */\nfunction () {\n  function Transport() {\n    var _this = this;\n\n    this.exchangeTimeout = 30000;\n    this.unresponsiveTimeout = 15000;\n    this.deviceModel = null;\n    this._events = new EventEmitter();\n    /**\n     * wrapper on top of exchange to simplify work of the implementation.\n     * @param cla\n     * @param ins\n     * @param p1\n     * @param p2\n     * @param data\n     * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n     * @return a Promise of response buffer\n     */\n\n    this.send = function (cla, ins, p1, p2, data, statusList) {\n      if (data === void 0) {\n        data = Buffer.alloc(0);\n      }\n\n      if (statusList === void 0) {\n        statusList = [StatusCodes.OK];\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var response, sw;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (data.length >= 256) {\n                throw new TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n              }\n\n              return [4\n              /*yield*/\n              , this.exchange(Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]))];\n\n            case 1:\n              response = _a.sent();\n              sw = response.readUInt16BE(response.length - 2);\n\n              if (!statusList.some(function (s) {\n                return s === sw;\n              })) {\n                throw new TransportStatusError(sw);\n              }\n\n              return [2\n              /*return*/\n              , response];\n          }\n        });\n      });\n    };\n\n    this.exchangeAtomicImpl = function (f) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var resolveBusy, busyPromise, unresponsiveReached, timeout, res;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this.exchangeBusyPromise) {\n                throw new TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n              }\n\n              busyPromise = new Promise(function (r) {\n                resolveBusy = r;\n              });\n              this.exchangeBusyPromise = busyPromise;\n              unresponsiveReached = false;\n              timeout = setTimeout(function () {\n                unresponsiveReached = true;\n\n                _this.emit(\"unresponsive\");\n              }, this.unresponsiveTimeout);\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1,, 3, 4]);\n\n              return [4\n              /*yield*/\n              , f()];\n\n            case 2:\n              res = _a.sent();\n\n              if (unresponsiveReached) {\n                this.emit(\"responsive\");\n              }\n\n              return [2\n              /*return*/\n              , res];\n\n            case 3:\n              clearTimeout(timeout);\n              if (resolveBusy) resolveBusy();\n              this.exchangeBusyPromise = null;\n              return [7\n              /*endfinally*/\n              ];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this._appAPIlock = null;\n  }\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n\n\n  Transport.prototype.exchange = function (_apdu) {\n    throw new Error(\"exchange not implemented\");\n  };\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n\n\n  Transport.prototype.setScrambleKey = function (_key) {};\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n\n\n  Transport.prototype.close = function () {\n    return Promise.resolve();\n  };\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n\n\n  Transport.prototype.on = function (eventName, cb) {\n    this._events.on(eventName, cb);\n  };\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n\n\n  Transport.prototype.off = function (eventName, cb) {\n    this._events.removeListener(eventName, cb);\n  };\n\n  Transport.prototype.emit = function (event) {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    (_a = this._events).emit.apply(_a, __spreadArray([event], __read(args), false));\n  };\n  /**\n   * Enable or not logs of the binary exchange\n   */\n\n\n  Transport.prototype.setDebugMode = function () {\n    console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n  };\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n\n\n  Transport.prototype.setExchangeTimeout = function (exchangeTimeout) {\n    this.exchangeTimeout = exchangeTimeout;\n  };\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n\n\n  Transport.prototype.setExchangeUnresponsiveTimeout = function (unresponsiveTimeout) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  };\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n\n\n  Transport.create = function (openTimeout, listenTimeout) {\n    var _this = this;\n\n    if (openTimeout === void 0) {\n      openTimeout = 3000;\n    }\n\n    return new Promise(function (resolve, reject) {\n      var found = false;\n\n      var sub = _this.listen({\n        next: function (e) {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          _this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: function (e) {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: function () {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          if (!found) {\n            reject(new TransportError(_this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n          }\n        }\n      });\n\n      var listenTimeoutId = listenTimeout ? setTimeout(function () {\n        sub.unsubscribe();\n        reject(new TransportError(_this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n      }, listenTimeout) : null;\n    });\n  };\n\n  Transport.prototype.decorateAppAPIMethods = function (self, methods, scrambleKey) {\n    var e_1, _a;\n\n    try {\n      for (var methods_1 = __values(methods), methods_1_1 = methods_1.next(); !methods_1_1.done; methods_1_1 = methods_1.next()) {\n        var methodName = methods_1_1.value;\n        self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (methods_1_1 && !methods_1_1.done && (_a = methods_1[\"return\"])) _a.call(methods_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Transport.prototype.decorateAppAPIMethod = function (methodName, f, ctx, scrambleKey) {\n    var _this = this;\n\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var _appAPIlock;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _appAPIlock = this._appAPIlock;\n\n              if (_appAPIlock) {\n                return [2\n                /*return*/\n                , Promise.reject(new TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"))];\n              }\n\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1,, 3, 4]);\n\n              this._appAPIlock = methodName;\n              this.setScrambleKey(scrambleKey);\n              return [4\n              /*yield*/\n              , f.apply(ctx, args)];\n\n            case 2:\n              return [2\n              /*return*/\n              , _a.sent()];\n\n            case 3:\n              this._appAPIlock = null;\n              return [7\n              /*endfinally*/\n              ];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n  };\n\n  Transport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  Transport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n  return Transport;\n}();\n\nexport default Transport;","map":{"version":3,"mappings":"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","names":["EventEmitter","TransportRaceCondition","TransportError","StatusCodes","getAltStatusMessage","TransportStatusError","cla","ins","p1","p2","data","statusList","Buffer","alloc","OK","length","exchange","concat","from","response","_a","sw","readUInt16BE","some","s","f","exchangeBusyPromise","busyPromise","Promise","r","resolveBusy","unresponsiveReached","timeout","setTimeout","_this","emit","unresponsiveTimeout","res","clearTimeout","Transport","_apdu","Error","_key","resolve","eventName","cb","_events","on","removeListener","event","args","apply","__spreadArray","__read","console","warn","exchangeTimeout","openTimeout","listenTimeout","reject","found","sub","listen","next","e","unsubscribe","listenTimeoutId","open","descriptor","then","error","complete","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","self","methods","scrambleKey","methods_1_1","methodName","decorateAppAPIMethod","ctx","_appAPIlock","setScrambleKey"],"sourceRoot":"","sources":["../src/Transport.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}