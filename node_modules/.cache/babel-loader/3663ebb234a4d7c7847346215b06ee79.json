{"ast":null,"code":"var _jsxFileName = \"/Users/komalfulwar/Downloads/candy-machine-ui/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useMemo } from \"react\";\nimport * as anchor from \"@project-serum/anchor\";\nimport Home from \"./Home\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { getPhantomWallet, getSlopeWallet, getSolflareWallet, getSolletWallet, getSolletExtensionWallet } from \"@solana/wallet-adapter-wallets\";\nimport { ConnectionProvider, WalletProvider } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core\";\nimport NFTDetails from \"./pages/NFTDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nconst getCandyMachineId = () => {\n  try {\n    const candyMachineId = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);\n    return candyMachineId;\n  } catch (e) {\n    console.log(\"Failed to construct CandyMachineId\", e);\n    return undefined;\n  }\n};\n\nconst candyMachineId = getCandyMachineId();\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST;\nconst connection = new anchor.web3.Connection(rpcHost ? rpcHost : anchor.web3.clusterApiUrl(\"devnet\"));\nconst txTimeoutInMilliseconds = 30000;\n\nconst App = () => {\n  _s();\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getSlopeWallet(), getSolletWallet({\n    network\n  }), getSolletExtensionWallet({\n    network\n  })], []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n      endpoint: endpoint,\n      children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n        wallets: wallets,\n        autoConnect: true,\n        children: /*#__PURE__*/_jsxDEV(WalletDialogProvider, {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {\n                candyMachineId: candyMachineId,\n                connection: connection,\n                txTimeout: txTimeoutInMilliseconds,\n                rpcHost: rpcHost\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/nft/:nftId\",\n              element: /*#__PURE__*/_jsxDEV(NFTDetails, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/komalfulwar/Downloads/candy-machine-ui/src/App.tsx"],"names":["useMemo","anchor","Home","Route","Routes","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","ThemeProvider","createTheme","NFTDetails","theme","palette","type","getCandyMachineId","candyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","e","console","log","undefined","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","txTimeoutInMilliseconds","App","endpoint","wallets"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,SACEC,gBADF,EAEEC,cAFF,EAGEC,iBAHF,EAIEC,eAJF,EAKEC,wBALF,QAMO,gCANP;AAQA,SACEC,kBADF,EAEEC,cAFF,QAGO,8BAHP;AAIA,SAASC,oBAAT,QAAqC,oCAArC;AAEA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACxBG,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC;AADe,CAAD,CAAzB;;AAMA,MAAMC,iBAAiB,GAAG,MAAyC;AACjE,MAAI;AACF,UAAMC,cAAc,GAAG,IAAIpB,MAAM,CAACqB,IAAP,CAAYC,SAAhB,CACrBC,OAAO,CAACC,GAAR,CAAYC,0BADS,CAAvB;AAIA,WAAOL,cAAP;AACD,GAND,CAME,OAAOM,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,CAAlD;AACA,WAAOG,SAAP;AACD;AACF,CAXD;;AAaA,MAAMT,cAAc,GAAGD,iBAAiB,EAAxC;AACA,MAAMW,OAAO,GAAGP,OAAO,CAACC,GAAR,CAAYO,wBAA5B;AACA,MAAMC,OAAO,GAAGT,OAAO,CAACC,GAAR,CAAYS,yBAA5B;AACA,MAAMC,UAAU,GAAG,IAAIlC,MAAM,CAACqB,IAAP,CAAYc,UAAhB,CACjBH,OAAO,GAAGA,OAAH,GAAahC,MAAM,CAACqB,IAAP,CAAYjB,aAAZ,CAA0B,QAA1B,CADH,CAAnB;AAIA,MAAMgC,uBAAuB,GAAG,KAAhC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGvC,OAAO,CAAC,MAAMK,aAAa,CAAC0B,OAAD,CAApB,EAA+B,EAA/B,CAAxB;AAEA,QAAMS,OAAO,GAAGxC,OAAO,CACrB,MAAM,CACJM,gBAAgB,EADZ,EAEJE,iBAAiB,EAFb,EAGJD,cAAc,EAHV,EAIJE,eAAe,CAAC;AAAEsB,IAAAA;AAAF,GAAD,CAJX,EAKJrB,wBAAwB,CAAC;AAAEqB,IAAAA;AAAF,GAAD,CALpB,CADe,EAQrB,EARqB,CAAvB;AAWA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEd,KAAtB;AAAA,2BACE,QAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAEsB,QAA9B;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEC,OAAzB;AAAkC,QAAA,WAAW,MAA7C;AAAA,+BACE,QAAC,oBAAD;AAAA,iCACE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,GADP;AAEE,cAAA,OAAO,eACL,QAAC,IAAD;AACE,gBAAA,cAAc,EAAEnB,cADlB;AAEE,gBAAA,UAAU,EAAEc,UAFd;AAGE,gBAAA,SAAS,EAAEE,uBAHb;AAIE,gBAAA,OAAO,EAAEJ;AAJX;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,aAAZ;AAA0B,cAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAtCD;;GAAMK,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useMemo } from \"react\";\nimport * as anchor from \"@project-serum/anchor\";\nimport Home from \"./Home\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\n\nimport { ThemeProvider, createTheme } from \"@material-ui/core\";\nimport NFTDetails from \"./pages/NFTDetails\";\n\nconst theme = createTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\n  try {\n    const candyMachineId = new anchor.web3.PublicKey(\n      process.env.REACT_APP_CANDY_MACHINE_ID!\n    );\n\n    return candyMachineId;\n  } catch (e) {\n    console.log(\"Failed to construct CandyMachineId\", e);\n    return undefined;\n  }\n};\n\nconst candyMachineId = getCandyMachineId();\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(\n  rpcHost ? rpcHost : anchor.web3.clusterApiUrl(\"devnet\")\n);\n\nconst txTimeoutInMilliseconds = 30000;\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSolflareWallet(),\n      getSlopeWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    []\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletDialogProvider>\n            <Routes>\n              <Route\n                path=\"/\"\n                element={\n                  <Home\n                    candyMachineId={candyMachineId}\n                    connection={connection}\n                    txTimeout={txTimeoutInMilliseconds}\n                    rpcHost={rpcHost}\n                  />\n                }\n              />\n              <Route path=\"/nft/:nftId\" element={<NFTDetails />} />\n            </Routes>\n          </WalletDialogProvider>\n        </WalletProvider>\n      </ConnectionProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}